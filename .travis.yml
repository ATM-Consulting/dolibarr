# This script is used by Travis CI to run automatically Continuous test integration
# from Dolibarr GitHub repository.
# Command run is phpunit
# For syntax, see http://about.travis-ci.org/docs/user/languages/php/

notifications:
  email:
    on_success: never # [always|never|change] default: change
    on_failure: change # [always|never|change] default: always
    
# This will tell travis to run phpunit
language: php
php:
# - "5.2" is not supported because pyrus to install PHP_Codesniffer is not available
 - "5.3"
 - "5.4"
 - "5.5" 

env:
 - DB=mysql
# - DB=postgres  

before_script: 
 - echo Start travis
 - echo Current dir is `pwd`
 - echo Home dir is `echo ~`
 - export PHPV=`phpenv version-name`
 - echo PHP version $PHPV 
 - echo Create dir $(pwd)/htdocs/documents
 - sudo mkdir -p $(pwd)/htdocs/documents/admin/temp;
 - sudo touch $(pwd)/htdocs/documents/dolibarr.log;
 - sudo chmod a+rwx /home; sudo chmod a+rwx /home/travis; sudo chmod -R a+rwx /home/travis/build;
 - sudo chmod -R a+rwx $(pwd);
 - sudo chown -R www-data:travis $(pwd)/htdocs/documents;
 - find $(pwd)/htdocs/documents -type d -exec ls -alt {} \;

- |
  echo "Setting up PHP"
  echo
  echo "Set timezone"
  echo 'date.timezone = "Europe/Paris"' >> ~/.phpenv/versions/$PHP_VERSION_NAME/etc/php.ini
  if [ "$TRAVIS_PHP_VERSION" = '5.3' ] || [ "$TRAVIS_PHP_VERSION" = '5.4' ]; then
    #echo
    #echo "Enabling APC for PHP <= 5.4"
    #   Documentation says it should be available for PHP <= 5.6 but it's not for 5.5 and 5.6!
    #echo 'extension = apc.so' >> ~/.phpenv/versions/$PHP_VERSION_NAME/etc/php.ini
    echo
    echo "Enabling Memcached for PHP <= 5.4"
    #   Documentation says it should be available for all PHP versions but it's not for 5.5 and 5.6, 7.0 and nightly!
    echo 'extension = memcached.so' >> ~/.phpenv/versions/$PHP_VERSION_NAME/etc/php.ini
  fi
  phpenv rehash
  echo

- |
  echo "Setting up database"
  if [ "$DB" = 'mysql' ] || [ "$DB" = 'mariadb' ]; then
    echo "MySQL"
    mysql -e 'DROP DATABASE IF EXISTS travis;'
    mysql -e 'CREATE DATABASE IF NOT EXISTS travis;'
    mysql -D travis < dev/initdata/mysqldump_dolibarr_3.5.0.sql
  fi
  # FIXME: find a way to import a MySQL dump into PostgreSQL
  #if [ "$DB" = 'postgresql' ]; then
  #  pgsql travis < dev/initdata/mysqldump_dolibarr_3.5.0.sql
  #fi
  # TODO: SQLite
  echo
 
- |
  export CONF_FILE=htdocs/conf/conf.php
  echo "Setting up Dolibarr $CONF_FILE"
  echo '<?php ' > $CONF_FILE
  echo '$'dolibarr_main_url_root=\'http://127.0.0.1\'';' >> $CONF_FILE
  echo '$'dolibarr_main_document_root=\'$TRAVIS_BUILD_DIR/htdocs\'';' >> $CONF_FILE
  echo '$'dolibarr_main_data_root=\'$TRAVIS_BUILD_DIR/documents\'';' >> $CONF_FILE
  echo '$'dolibarr_main_db_host=\'127.0.0.1\'';' >> $CONF_FILE
  echo '$'dolibarr_main_db_name=\'travis\'';' >> $CONF_FILE
  echo '$'dolibarr_main_db_user=\'travis\'';' >> $CONF_FILE
  if [ "$DB" = 'mysql' ] || [ "$DB" = 'mariadb' ]; then
    echo '$'dolibarr_main_db_type=\'mysqli\'';' >> $CONF_FILE
  fi
  # FIXME
  #if [ "$DB" = 'postgresql' ]; then
  #  echo '$'dolibarr_main_db_type=\'pgsql\'';' >> $CONF_FILE
  #fi
  # TODO: SQLite
  echo '$'dolibarr_main_authentication=\'dolibarr\'';' >> $CONF_FILE
  cat $CONF_FILE
  echo

- |
  echo "Setting up Apache + FPM"
  # enable php-fpm
  cp ~/.phpenv/versions/$PHP_VERSION_NAME/etc/php-fpm.conf.default ~/.phpenv/versions/$PHP_VERSION_NAME/etc/php-fpm.conf
  if [ "$TRAVIS_PHP_VERSION" = '7.0' ] || [ "$TRAVIS_PHP_VERSION" = 'nightly' ]; then
    # Copy the included pool
    cp ~/.phpenv/versions/$PHP_VERSION_NAME/etc/php-fpm.d/www.conf.default ~/.phpenv/versions/$PHP_VERSION_NAME/etc/php-fpm.d/www.conf
  fi
  if [ "$DEBUG" = true ]; then
    cat ~/.phpenv/versions/$PHP_VERSION_NAME/etc/php-fpm.conf
  fi
  sudo a2enmod rewrite actions fastcgi alias
  echo "cgi.fix_pathinfo = 1" >> ~/.phpenv/versions/$PHP_VERSION_NAME/etc/php.ini
  if [ "$DEBUG" = true ]; then
    cat ~/.phpenv/versions/$PHP_VERSION_NAME/etc/php.ini
  fi
  ~/.phpenv/versions/$PHP_VERSION_NAME/sbin/php-fpm
  # configure apache virtual hosts
  sudo cp -f build/travis-ci/apache.conf /etc/apache2/sites-available/default
  sudo sed -e "s?%TRAVIS_BUILD_DIR%?$TRAVIS_BUILD_DIR?g" --in-place /etc/apache2/sites-available/default
  if [ "$DEBUG" = true ]; then
    sudo cat /etc/apache2/sites-available/default
  fi
  sudo service apache2 restart
  echo

script: 
 - cd htdocs/install
 - date
 - php upgrade.php 3.4.0 3.5.0 > upgrade.log
 - php upgrade2.php 3.4.0 3.5.0 > upgrade2.log
# - cat upgrade.log
# - cat upgrade2.log
 - cd ../..
 - date
# - phpcs -p --warning-severity=0 -s --report-summary --standard=dev/codesniffer/ruleset.xml --tab-width=4 --ignore=/build/html/,/dev/vagrant/,/documents/,/includes/,/test/report/ htdocs/core/class/dolgraph.class.php 2>&1
 - phpcs -p --warning-severity=0 -s --report-checkstyle --report-summary --standard=dev/codesniffer/ruleset.xml --tab-width=4 --ignore=/build/html/,/dev/vagrant/,/documents/,/includes/,/test/report/ . 2>&1
 - date
# - phpunit -d memory_limit=-1 --configuration test/phpunit/phpunittest.xml --coverage-text test/phpunit/BuildDocTest.php
 - phpunit -d memory_limit=-1 --configuration test/phpunit/phpunittest.xml test/phpunit/AllTests.php

after_script:
# - echo Output dolibarr log file; cat $(pwd)/htdocs/documents/dolibarr.log
 - echo Output apache log file; sudo cat /var/log/apache2/error.log
 - echo End travis

